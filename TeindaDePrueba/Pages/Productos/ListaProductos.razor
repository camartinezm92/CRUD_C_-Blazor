@page "/listar-productos"
@inject ProductoCoordinator ProductoCoordinator
@inject NavigationManager NavigationManager
@inject TeindaDePrueba.State.AppState AppState

<PageTitle>T.I.C</PageTitle>

<div class="col-md-6">
    <h1><strong>Nuestros Productos</strong> </h1>
</div>


<div class="d-flex justify-content-start mb-3">
    <button class="btn btn-success me-2" @onclick="CrearPedido">Crear Pedido</button>
    @if (AppState.Rol != "Cliente")
    {
        <button class="btn btn-primary" @onclick="CrearProducto">Crear Producto</button>
    }
</div>

<div class="row ml-2">
    @if (productos != null)
    {
        @foreach (var producto in productos)
        {
            <div class="col-md-3 mb-3">
                <div class="card h-100" style="max-width: 250px; min-height: 350px;">
                    <img src="@producto.ImagenUrl" class="card-img-top mx-auto d-block" alt="@producto.Nombre" style="width: 150px; height: 150px; object-fit: cover;" />
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title">@producto.Nombre</h5>
                        <p class="card-text">
                            @if (!string.IsNullOrEmpty(producto.Descripcion))
                            {
                                <span class="text-muted" style="overflow: hidden; display: -webkit-box; -webkit-line-clamp: 3; -webkit-box-orient: vertical; text-overflow: ellipsis;">@producto.Descripcion</span>
                            }
                            else
                            {
                                <span class="text-muted">Sin descripción disponible.</span>
                            }
                        </p>
                        <p><strong>Precio:</strong> @producto.Precio.ToString("C")</p>
                        <div class="mt-auto">
                            <button class="btn btn-primary w-100" @onclick="() => VerDetallesProducto(producto.Id)">Detalles</button>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
    else if (!string.IsNullOrEmpty(mensaje))
    {
        <div class="col-12">
            <p>@mensaje</p>
        </div>
    }
</div>

@code {
    private List<ProductoDTO> productos = null;
    private string mensaje = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await ListarProductos();  // Listar productos automáticamente al cargar la página
    }

    private async Task ListarProductos()
    {
        mensaje = "Solicitando...";
        productos = await ProductoCoordinator.ObtenerProductosCoordinadosAsync();

        if (productos == null || productos.Count == 0)
        {
            mensaje = "No hay productos disponibles.";
            NavigationManager.NavigateTo("/", true);
        }
        else
        {
            mensaje = string.Empty;
        }
    }

    private void VerDetallesProducto(int id)
    {
        NavigationManager.NavigateTo($"/ver-producto/{id}");
    }

    private void CrearPedido()
    {
        NavigationManager.NavigateTo("/crear-pedido");
    }

    private void CrearProducto()
    {
        NavigationManager.NavigateTo("/crear-producto");
    }
}
